//#include <iostream>
//#include <vector>
//#include <unordered_map>
//
//using namespace std;
//
//class Solution {
//public:
//    int subarraySum(vector<int>& nums, int k) {
//        unordered_map<int, int> sums;
//        int sum = 0, count = 0;
//        sums[0] = 1;
//        for (const int& num: nums) {
//            sum += num;
//            if (sums.find(sum - k) != sums.end()) {
//                count += sums[sum - k];
//            }
//            sums[sum]++;
//        }
//
//        return count;
//    }
//
////    int subarraySum(vector<int>& nums, int k) {
////        int count = 0;
////        vector<bool> check(nums.size(), false);
////
////        for (int i = 1; i < nums.size(); ++i) {
////            vector<int> idxVec;
////            int sum = 0;
////            for (int j = 0; j < nums.size(); ++j) {
////                if (check[j]) continue;
////
////                idxVec.push_back(j);
////                sum += nums[j];
////                int start = idxVec.size() - i, end = idxVec.size() - 1;
////                if (start < 0) continue;
////
////                if (sum == k) count++;
////                else if (sum == 0) {
////                    for (int l = start; l <= end; ++l) check[idxVec[l]] = true;
////                }
////                sum -= nums[idxVec[start]];
////            }
////        }
////        return count;
////    }
////    int subarraySum(vector<int>& nums, int k) {
////        int count = 0;
////
////        for (int i = 0; i < nums.size(); ++i) {
////            sums[i] = nums[i];
////            if (nums[i] == k) count++;
////        }
////
////        for (int i = 1; i < nums.size(); ++i) {
////            for (int j = i; j < nums.size(); j++) {
////                int idx = j - i;
////                sums[idx] += nums[j];
////                if (sums[idx] == k) count++;
////            }
////        }
////        return count;
////    }
//};
//
//int main() {
//    Solution solution;
//    int nums[] = {-756,-581,-172,175,-196,-163,-438,993,-408,747,-543,273,-928,-263,54,-954,-453,-749,712,-499,466,97,-448,-998,-681,-981,560,-736,-326,206,-823,-486,-749,-904,828,359,768,-544,-472,646,426,-420,947,-126,-72,-87,-661,163,-517,-771,439,722,279,-430,692,475,118,-813,-479,-948,935,-572,502,257,-623,644,-851,935,-716,759,-483,478,562,-515,661,-564,-471,-564,720,-1000,303,-189,637,-611,465,-98,-874,933,700,627,-674,-834,-324,116,828,-760,-401,30,988,936,-101,527,806,737,-238,-266,726,615,968,-148,245,-938,490,-186,-863,482,-33,290,-426,552,-516,585,123,118,499,59,-743,966,-772,704,-296,218,-987,-881,899,-768,661,161,917,815,633,-609,555,531,838,921,219,758,-716,-424,-868,536,-4,-720,168,-367,437,271,-384,730,-627,808,-324,487,977,615,-784,-908,-196,-184,-359,-712,-582,-309,-93,-455,412,-876,615,749,-855,893,-504,522,764,940,694,615,-518,852,137,241,946,529,660,-571,-813,-436,-574,-328,-130,56,112,842,-496,-272,-959,880,-485,912,-188,-452,-405,869,73,471,-664,-231,303,445,-819,-430,-356,-206,-278,-622,855,-348,112,-115,109,-511,-835,557,-186,84,74,-241,-166,-419,-669,-792,976,-951,-900,713,-814,400,407,478,-50,-435,-255,420,512,369,-460,-606,844,655,-390,-750,826,-270,-689,20,824,-681,-551,985,-243,161,409,-633,434,657,745,969,760,305,961,-230,-893,900,595,950,-474,413,-490,-793,-841,512,-916,186,-832,-980,837,-913,-761,765,-999,-685,69,154,967,231,417,-836,-591,-846,914,497,890,179,319,-614,765,342,-368,-373,176,-265,271,-165,480,587,281,708,-77,-254,600,196,715,-191,-53,615,444,-132,279,845,223,431,-167,113,833,204,191,-427,-797,954,344,281,-879,-287,-126,550,865,903,831,852,-137,-324,-85,-628,-256,393,823,-206,-127,-345,162,-340,939,-246,-551,368,-776,411,-200,-807,-215,-969,322,-907,-274,-334,-391,608,-738,124,-878,930,870,-151,885,822,-967,-845,-744,6,333,-327,39,-846,-806,504,-208,-188,-980,-111,-160,844,994,844,-362,242,-719,810,480,854,447,-127,263,738,-736,4,61,595,492,150,193,-384,-695,560,-412,218,-122,-233,-193,221,446,-880,-989,218,824,530,-708,232,820,-998,739,-782,276,81,448,-522,-893,-285,-620,140,-125,265,217,967,-424,-84,302,-458,-79,101,291,-354,-417,358,441,-560,-225,-126,-445,640,10,-92,643,-662,-943,-569,477,-125,-994,922,-19,-758,682,-356,-338,288,-228,-679,650,-137,-211,167,416,-258,-755,829,-739,-180,-127,467,-177,45,-351,690,623,-123,-573,51,-743,722,-233,267,456,-50,-809,-631,-734,15,-726,488,-55,251,939,555,-113,-889,-266,442,-755,282,635,229,795,518,-132,-917,-946,457,-37,-822,709,-394,-294,-878,-475,-339,-28,-589,-152,-164,-27,164,-865,71,827,339,-299,23,-82,-609,-622,-342,-802,799,633,-63,12,632,-330,808,-675,-851,-755,188,394,241,-298,-359,-665,-369,987,733,-822,798,39,-162,-119,993,494,47,472,821,31,512,-187,-323,278,998,55,298,-265,-126,490,965,-112,903,49,-545,-817,-631,709,96,-567,-7,622,-753,-883,821,-776,-990,-820,-707,838,-120,515,-42,-475,105,-370,-997,136,848,-358,-494,224,699,-865,-13,-926,840,68,983,-487,302,740,952,200,201,500,-883,924,478,-223,29,-692,-33,925,-743,-527,775,-890,-115,17,580,65,683,-817,-802,50,-234,239,19,-638,-961,121,-740,480,-164,-398,311,849,345,779,424,536,-608,-406,-664,753,-909,-388,552,-36,294,298,437,-153,357,339,449,317,-614,-485,209,-393,378,30,430,-901,-967,868,-226,705,788,760,324,861,-895,-986,867,-432,-148,-160,-815,114,-698,576,-996,834,235,807,-469,-568,569,-626,-157,-646,-340,-656,-813,-335,-58,826,995,867,870,-588,-164,-726,974,617,343,-612,-805,606,770,-63,-289,-816,67,200,-617,-343,-332,-838,124,358,-878,-691,-368,837,891,98,-867,760,-568,605,693,770,-611,726,-210,896,175,-417,-985,649,-979,-236,-857,-731,-16,511,-390,462,818,214,264,-186,72,-364,683,-176,310,600,-691,36,-531,-701,-670,-979,174,-130,701,-820,-627,-683,862,970,989,-879,-897,-53,922,-751,-913,-631,154,290,-658,366,-516,152,-450,41,8,715,281,-277,117,-761,-336,732,-13,927,300,804,861,-253,67,-982,-637,858,655,-723,491,824,-747,-892,-953,-132,-203,414,193,-953,82,-647,-138,-680,614,197,-374,-498,60,-182,970,921,-640,170,585,-472,-665,-660,704,596,-829,-202,620,910,-19,-895,-261,-845,-450,-694,140,-44,-690,-895,476,911,-601,503,-157,325,90,789,-659,906,-492,760,-332,847,-947,43,-269,-764,195,430,-221,501,22,942,-273,777,639,624,-94,524,644,95,545,733,-560,607,989,-722,424,-570,468,-476,-440,-63,913,-843,711,517,472,756,96,-364,352,-328,-579,56,641,781,-90,-224,-863,422,-658,80,-975,-372,-500,502,235,290,-239,523,-30,-779,-680,110,-470,-623,348,-823,63,-367,-915,947,-757,868,773,-626,947,-256,584,458,-612,-297,268,-438,625,-265,893,-814,-516,-175,-607,367,24,-806,-969,-977,-559,840,-424,-894,-978,-757,-479,717,834,-944,789,374,-860,280,-334,-731,229,-496,-413,619,-548,-363,-956,-692,395,-976,-840,703,361,-168,-908,884,-956,771,463,-563,413,22,-632,598,828,-344,-219,-431,-59,210,787,-188,-38,-930,126,437,-590,-640,270,632,697,-258,644,622,434,380,342,222,-463,224,-670,-663,-69,777,243,143,-378,-962,-751,664,952,-252,871,-544,-739,32,-597,236,-977,-811,424,538,-413,-132,-841,867,-502,237,703,582,882,943,-259,-82,85,-509,229,-654,-138,269,-450,28,660,924,564,-631,569,-550,883,196,-410,-618,475,843,-375,-889,274,-949,714,60,-971,232,143,-17,549,-805,480,-80,608,836,196,-199,-257,-304,527,-337,-243,681,490,-15,-770,-283,266,489,81,-742,-810,438,-660,461,-829,880,-915,238,914,82,904,885,589,-874,-791,-877,21,-384,274,-153,875,566,701,262,118,608,408,159,827,-77,-294,725,-668,-617,59,475,693,-355,76,-667,-579,405,-372,529,73,448,574,375,389,705,86,-121,-124,179,86,422,675,181,657,-835,614,414,-637,-157,-332,-323,555,213,-401,514,-829,859,904,861,-600,766,171,64,773,-53,476,-722,-238,-786,483,146,78,-603,-32,680,999,891,880,954,290,19,590,297,-596,-442,562,-547,464,-462,330,-716,-195,-611,921,388,-367,744,214,954,-197,373,-569,-112,430,-324,-169,-996,94,-680,807,-784,-532,-541,887,838,252,-740,840,-406,167,-716,754,89,842,-4,198,-539,521,209,-929,949,-861,-759,-378,210,-236,724,454,-321,-350,-455,-264,477,84,802,-378,581,242,-216,273,825,664,-291,768,-815,-984,740,426,-615,498,-762,954,644,-303,476,296,60,-306,-378,-191,-878,-48,598,-614,-183,-627,-689,760,934,548,-662,899,691,424,148,-37,261,-416,-622,-901,-997,359,-373,-705,-669,861,594,147,-645,77,91,-570,-606,914,3,-641,-816,-146,18,236,955,432,637,-77,-797,-120,-606,-38,-645,-24,-7,323,32,-169,253,254,-93,493,-111,-600,226,694,-89,93,652,-658,707,175,834,814,-731,52,-353,-19,406,883,-794,-919,-709,93,-537,427,-164,-849,664,-294,-386,118,-554,156,-123,-175,339,-511,742,-915,455,503,769,862,-492,270,-635,476,464,-374,-821,936,-225,-158,218,450,800,-580,726,56,-588,-766,23,-343,182,-952,-380,-116,-614,-15,-293,47,-964,439,-607,800,159,-155,-10,-438,-97,385,748,-884,-156,932,645,-403,-312,784,524,-46,-70,3,380,-546,-916,-495,-542,883,930,323,-438,-497,-230,6,129,61,470,-636,-275,-256,-640,85,69,890,-950,222,-158,-589,355,480,936,-792,-846,810,-497,13,765,960,452,-382,-565,746,-544,-467,-830,-414,204,-872,-730,561,-870,628,289,-476,-372,-966,601,-984,378,631,364,930,428,705,-780,-523,-623,-740,-116,141,604,574,47,-226,-698,-814,-664,-264,6,-458,245,-40,-787,-410,928,870,388,-330,596,993,-659,327,335,881,250,-716,-275,-466,380,64,-712,913,-1,-560,-873,-7,-917,-631,614,-64,-805,-136,74,-718,471,522,-390,797,-634,-628,-871,766,282,-888,-701,-534,-513,517,-906,-268,-805,534,-939,206,-25,-919,99,695,737,-762,-730,-205,655,-27,-472,862,273,-571,733,-955,822,-898,191,-600,387,303,-565,947,-22,-594,504,-643,-414,168,489,826,632,-803,512,374,337,-110,-215,-947,-991,79,-339,759,22,-308,804,345,278,716,-215,-829,851,651,383,-104,968,-822,-945,-262,-626,187,706,651,414,96,-534,308,656,27,-840,293,466,-159,677,-950,215,106,-9,799,580,254,683,504,544,-153,755,221,-365,-601,-722,-7,208,958,998,791,-508,-115,609,-994,-254,-279,-728,-690,735,-629,-227,749,-406,-429,627,560,350,547,-61,-208,-178,-629,-705,991,-695,496,115,933,-128,-839,254,-39,-69,-667,-151,-762,-811,589,-11,355,484,-735,232,756,4,-569,99,226,512,-956,620,-638,-345,-94,-122,-15,979,-939,-376,309,390,-35,741,688,914,63,436,152,-549,810,-240,826,-763,-250,496,22,598,-79,601,-326,-227,-885,311,-787,-202,-739,301,542,692,86,200,431,578,50,879,-609,630,-821,-868,511,768,-12,469,-802,918,487,4,-333,472,-433,186,-954,-685,691,611,309,-286,241,-909,708,924,-776,-26,-740,-693,146,-978,257,-522,-462,126,746,-514,-905,-908,-970,-178,560,592,784,-867,729,126,-791,-946,232,783,-270,369,-524,772,-65,869,-442,687,-760,-239,-961,-92,-771,-281,42,-557,228,-642,501,-44,-92,316,-756,373,-492,853,-618,29,531,-227,450,676,-583,-870,480,737,-661,-153,768,558,-943,-554,906,-461,-797,-800,48,801,65,343,354,-55,930,707,-726,501,-132,891,-304,-60,-407,917,-227,-510,-492,467,-813,-171,13,336,-916,-912,-619,-873,-428,36,-948,659,199,-714,-533,683,533,346,362,-39,-264,396,101,601,8,900,452,24,716,911,-554,727,294,349,63,-683,-178,-760,539,906,260,-675,-852,960,811,240,527,-444,16,-149,-1000,573,-407,6,-640};
//    vector<int> vec;
//    for (int num: nums) vec.push_back(num);
//    cout << solution.subarraySum(vec, 408) << endl;
//    return 0;
//}